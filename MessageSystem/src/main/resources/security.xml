<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-3.1.xsd">
                        
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="user/create" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="user/create" requires-channel="https"/>
        <intercept-url pattern="user/update" requires-channel="https"/>
    </http>
    
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="adminService" />
        <authentication-provider user-service-ref="userService"/>
    </authentication-manager>
    
    <user-service id="adminService">
        <user name="admin" password="admin" 
                  authorities="ROLE_USER,ROLE_ADMIN"/>
    </user-service>
    <jdbc-user-service id="userService" 
       data-source-ref="dataSource"
       users-by-username-query=
          "select username, password, true from muser where username=?"
       authorities-by-username-query=
          "select username,'ROLE_USER' from muser where username=?" />
    
    <global-method-security pre-post-annotations="enabled"/>
</beans:beans>